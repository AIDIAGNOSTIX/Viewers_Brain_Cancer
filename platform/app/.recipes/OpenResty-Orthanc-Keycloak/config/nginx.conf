worker_processes 2;
error_log /var/logs/nginx/mydomain.error.log;
pid /var/run/nginx.pid;
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /usr/local/openresty/nginx/conf/mime.types;
    default_type application/octet-stream;

    keepalive_timeout 65;
    keepalive_requests 100000;
    tcp_nopush on;
    tcp_nodelay on;

    lua_package_path '/usr/local/openresty/lualib/?.lua;;/usr/local/share/lua/5.4/?.lua;;';
    lua_shared_dict discovery 1m;
    lua_shared_dict jwks 1m;

    variables_hash_max_size 2048;
    server_names_hash_bucket_size 128;
    server_tokens off;

    resolver 8.8.8.8 valid=30s ipv6=off;
    resolver_timeout 11s;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name ai-diagnostix.com www.ai-diagnostix.com;

        location /.well-known/acme-challenge/ {
            root /var/www/html;
            try_files $uri =404;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name ai-diagnostix.com www.ai-diagnostix.com;

        ssl_certificate /usr/local/openresty/nginx/conf/ssl/fullchain.pem;
        ssl_certificate_key /usr/local/openresty/nginx/conf/ssl/privkey.pem;

        location / {
            root /var/www/html;
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            add_header 'Cross-Origin-Opener-Policy' 'same-origin' always;
            add_header 'Cross-Origin-Embedder-Policy' 'require-corp' always;
        }

        location /auth/ {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto https;
            proxy_pass http://keycloak:8080/auth/;
        }

        location /pacs-admin/ {
            access_by_lua_block {
                local opts = {
                    redirect_uri = "http://127.0.0.1/pacs-admin/admin",
                    discovery = "http://127.0.0.1/auth/realms/ohif/.well-known/openid-configuration",
                    token_endpoint_auth_method = "client_secret_basic",
                    client_id = "pacs",
                    client_secret = "66279641-eba6-47f5-9fdb-70c4ac74d548",
                    client_jwt_assertion_expires_in = 60 * 60,
                    ssl_verify = "no",
                    scope = "openid email profile",
                    refresh_session_interval = 900,
                    redirect_uri_scheme = "http",
                    redirect_after_logout_uri = "/",
                    session_contents = {id_token=true}
                }

                local res, err = require("resty.openidc").authenticate(opts)

                if err or not res then
                    ngx.print(err)
                    ngx.status = 200
                    ngx.say(err and err or "no access_token provided")
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                end

                ngx.req.set_header("X-USER", res.id_token.sub)
            }

            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            expires 0;
            add_header Cache-Control private;

            proxy_pass http://orthanc:8042/;
        }

        location /pacs/ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Allow-Headers' 'Authorization';
                add_header 'Access-Control-Allow-Credentials' true;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
                add_header 'Access-Control-Allow-Headers' 'Authorization';
                add_header 'Access-Control-Allow-Credentials' true;
            }
            access_by_lua_block {
                local opts = {
                    discovery = "http://127.0.0.1/auth/realms/ohif/.well-known/openid-configuration",
                }

                local res, err = require("resty.openidc").bearer_jwt_verify(opts)

                if err or not res then
                    ngx.status = 403
                    ngx.say(err and err or "no access_token provided")
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                end
            }

            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            expires 0;
            add_header Cache-Control private;

            proxy_pass http://orthanc:8042/;
        }

        location /sw.js {
            add_header Cache-Control "no-cache";
            proxy_cache_bypass $http_pragma;
            proxy_cache_revalidate on;
            expires off;
            access_log off;
        }
    }
}
